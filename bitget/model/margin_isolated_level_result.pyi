# coding: utf-8

"""
    Bitget Open API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from bitget import schemas  # noqa: F401


class MarginIsolatedLevelResult(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            baseCoin = schemas.StrSchema
            baseMaxBorrowableAmount = schemas.StrSchema
            initRate = schemas.StrSchema
            leverage = schemas.StrSchema
            maintainMarginRate = schemas.StrSchema
            quoteCoin = schemas.StrSchema
            quoteMaxBorrowableAmount = schemas.StrSchema
            symbol = schemas.StrSchema
            tier = schemas.StrSchema
            __annotations__ = {
                "baseCoin": baseCoin,
                "baseMaxBorrowableAmount": baseMaxBorrowableAmount,
                "initRate": initRate,
                "leverage": leverage,
                "maintainMarginRate": maintainMarginRate,
                "quoteCoin": quoteCoin,
                "quoteMaxBorrowableAmount": quoteMaxBorrowableAmount,
                "symbol": symbol,
                "tier": tier,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["baseCoin"]) -> MetaOapg.properties.baseCoin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["baseMaxBorrowableAmount"]) -> MetaOapg.properties.baseMaxBorrowableAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["initRate"]) -> MetaOapg.properties.initRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["leverage"]) -> MetaOapg.properties.leverage: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maintainMarginRate"]) -> MetaOapg.properties.maintainMarginRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["quoteCoin"]) -> MetaOapg.properties.quoteCoin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["quoteMaxBorrowableAmount"]) -> MetaOapg.properties.quoteMaxBorrowableAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["symbol"]) -> MetaOapg.properties.symbol: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tier"]) -> MetaOapg.properties.tier: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["baseCoin", "baseMaxBorrowableAmount", "initRate", "leverage", "maintainMarginRate", "quoteCoin", "quoteMaxBorrowableAmount", "symbol", "tier", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["baseCoin"]) -> typing.Union[MetaOapg.properties.baseCoin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["baseMaxBorrowableAmount"]) -> typing.Union[MetaOapg.properties.baseMaxBorrowableAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["initRate"]) -> typing.Union[MetaOapg.properties.initRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["leverage"]) -> typing.Union[MetaOapg.properties.leverage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maintainMarginRate"]) -> typing.Union[MetaOapg.properties.maintainMarginRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["quoteCoin"]) -> typing.Union[MetaOapg.properties.quoteCoin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["quoteMaxBorrowableAmount"]) -> typing.Union[MetaOapg.properties.quoteMaxBorrowableAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["symbol"]) -> typing.Union[MetaOapg.properties.symbol, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tier"]) -> typing.Union[MetaOapg.properties.tier, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["baseCoin", "baseMaxBorrowableAmount", "initRate", "leverage", "maintainMarginRate", "quoteCoin", "quoteMaxBorrowableAmount", "symbol", "tier", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        baseCoin: typing.Union[MetaOapg.properties.baseCoin, str, schemas.Unset] = schemas.unset,
        baseMaxBorrowableAmount: typing.Union[MetaOapg.properties.baseMaxBorrowableAmount, str, schemas.Unset] = schemas.unset,
        initRate: typing.Union[MetaOapg.properties.initRate, str, schemas.Unset] = schemas.unset,
        leverage: typing.Union[MetaOapg.properties.leverage, str, schemas.Unset] = schemas.unset,
        maintainMarginRate: typing.Union[MetaOapg.properties.maintainMarginRate, str, schemas.Unset] = schemas.unset,
        quoteCoin: typing.Union[MetaOapg.properties.quoteCoin, str, schemas.Unset] = schemas.unset,
        quoteMaxBorrowableAmount: typing.Union[MetaOapg.properties.quoteMaxBorrowableAmount, str, schemas.Unset] = schemas.unset,
        symbol: typing.Union[MetaOapg.properties.symbol, str, schemas.Unset] = schemas.unset,
        tier: typing.Union[MetaOapg.properties.tier, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'MarginIsolatedLevelResult':
        return super().__new__(
            cls,
            *args,
            baseCoin=baseCoin,
            baseMaxBorrowableAmount=baseMaxBorrowableAmount,
            initRate=initRate,
            leverage=leverage,
            maintainMarginRate=maintainMarginRate,
            quoteCoin=quoteCoin,
            quoteMaxBorrowableAmount=quoteMaxBorrowableAmount,
            symbol=symbol,
            tier=tier,
            _configuration=_configuration,
            **kwargs,
        )
